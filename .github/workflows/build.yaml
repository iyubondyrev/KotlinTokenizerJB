name: Build and Upload JAR on Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: openjdk:17-slim

    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'Kotlin/kotlin-spec'
          path: 'kotlin-spec'

      - uses: actions/checkout@v2
        with:
          repository: 'Kotlin/grammar-tools'
          path: 'grammar-tools'

      - uses: actions/checkout@v2
        with:
          repository: 'iyubondyrev/KotlinTokenizerJB'
          path: 'KotlinTokenizerJB'

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install kotlin-grammar-parser
        run: ./gradlew :grammar:publishToMavenLocal
        working-directory: ./kotlin-spec

      - name: Build and publish kotlin-grammar-tools
        run: ./gradlew publishToMavenLocal
        working-directory: ./grammar-tools

      - name: Build Tokenizer JAR
        run: ./gradlew TokenizeJar
        working-directory: ./KotlinTokenizerJB

      - name: Build GetPopularLiterals JAR
        run: ./gradlew GetPopularLiteralsJar
        working-directory: ./KotlinTokenizerJB

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./KotlinTokenizerJB/build/libs/GetPopularLiterals.jar
          asset_name: GetPopularLiterals.jar
          asset_content_type: application/java-archive

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./KotlinTokenizerJB/build/libs/Tokenize.jar
          asset_name: Tokenize.jar
          asset_content_type: application/java-archive
